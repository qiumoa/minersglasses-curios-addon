plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = project.mod_version
group = project.mod_group_id

base {
    archivesName = project.mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // mappings 使用官方映射
    mappings channel: 'official', version: project.minecraft_version

    // 如果需要访问令 (access transformer)，取消注释
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // 运行配置
    runs {
        // 客户端运行配置
        client {
            workingDirectory project.file('run')

            // 推荐的 JVM 参数
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // 启用 Mixin
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                minersglasses_curios_addon {
                    source sourceSets.main
                }
            }
        }

        // 服务端运行配置
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                minersglasses_curios_addon {
                    source sourceSets.main
                }
            }
        }

        // 数据生成运行配置
        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // 指定数据生成的参数
            args '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                minersglasses_curios_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

// 包含数据生成的资源
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // 阿里云 Maven 中央仓库镜像（国内加速，优先使用）
    maven {
        name = "Aliyun Maven Central"
        url = "https://maven.aliyun.com/repository/public/"
    }

    // 阿里云 Google 仓库镜像
    maven {
        name = "Aliyun Google"
        url = "https://maven.aliyun.com/repository/google/"
    }

    // Forge Maven 仓库（国内可能较慢）
    maven {
        name = "MinecraftForge"
        url = "https://maven.minecraftforge.net/"
    }

    // Curios Maven 仓库
    maven {
        name = "Curios maven"
        url = "https://maven.theillusivec4.top/"
    }

    // Maven 中央仓库（备用）
    mavenCentral()
}

dependencies {
    // Forge 依赖（由 ForgeGradle 自动处理）
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Curios API 依赖
    // 编译时和运行时都需要
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")

    // 如果需要在开发环境中使用原始的 Miner's Glasses 模组
    // 取消注释下面这行，并将 jar 文件放到 libs/ 目录
    // implementation fg.deobf("curse.maven:miners-glasses-123456:7890123")
}

// Jar 任务配置
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
            'Specification-Title'     : project.mod_id,
            'Specification-Vendor'    : project.mod_author,
            'Specification-Version'   : '1',
            'Implementation-Title'    : project.name,
            'Implementation-Version'  : project.jar_version,
            'Implementation-Vendor'   : project.mod_author,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // 将 LICENSE 文件包含到 jar 中（如果有的话）
    // from('LICENSE') {
    //     rename { "${it}_${project.mod_id}" }
    // }
}

// 发布配置（可选）
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

// 确保 jar 任务依赖于所有必要的任务
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
